@page "/rentinstrument/{instrumentid:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ILogger<UserSettings> Logger

<style>

	/*   .blog-post {
				max-width: 800px;
				margin: 0 auto 30px auto;
				padding: 20px;
				border: 1px solid #ccc;
				border-radius: 5px;
				background-color: #fff;
				box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
			}

			.blog-post-title {
				font-size: 2.5rem;
				margin-bottom: 10px;
			}

			.blog-post-meta {
				font-size: 1.1rem;
				color: #888;
				margin-bottom: 20px;
			}

			.blog-post hr {
				margin-top: 30px;
				margin-bottom: 30px;
				border: 0;
				border-top: 1px solid #ccc;
			}
				*/
	.form-group {
		margin-bottom: 20px;
	}

	.form-check {
		margin-left: 10px;
		width: 20px;
		height: 20px;
	}

	label {
		display: block;
		margin-bottom: 5px;
		font-weight: bold;
	}

	.input-error {
		color: red;
	}

	.image-container {
		display: flex;
		flex-wrap: wrap;
		margin-bottom: 20px;
		max-width: 500px;
		max-height: 500px;
	}

		.image-container img {
			max-width: 500px;
			max-height: 500px;
			cursor: pointer;
			border: 1px solid transparent;
			transition: border-color 0.3s ease-in-out;
		}

			.image-container img:hover {
				border-color: #007bff;
				opacity: 0.4;
			}

	.selected-image {
		border: 2px solid blue;
	}

	.form-control {
		width: 50%;
	}

	.form-date {
		width: 25%;
	}

	label {
		cursor: pointer;
		display: inline-block;
	}
</style>

<PageTitle>Vuokraa soitin</PageTitle>

<h1>Vuokraa soitin</h1>


@if (null == rentalInstrument)
{
	<p>Ladataan soitinta...</p>

}
else
{

	<div class="card" style="max-width: 740px;">

		<h4 class="card-header">@rentalInstrument.Type</h4>
		<div class="card-body">
			<EditForm Model="@rentalInstrument" OnValidSubmit="@SubmitRental">
				<DataAnnotationsValidator />
				<ValidationSummary />
				<!--TODO: eri kuvamuodot mukaan jotenkin, nyt herjaa vaikka kuva vaihtuukin tietokantaan-->


				<div class="form-group">
					<label for="picture">
						@if (rentalInstrument.Picture == null)
						{
							<div class="image-container">
								<img src="~src\BlazorPeople\wwwroot\images\trip_images\trip1_image1.png" />
							</div>

						}
						else
						{
							<div class="image-container">
								<img src="data:image/jpg;base64,@Convert.ToBase64String(rentalInstrument.Picture)" style="max-width: 70%; height: auto;" class="trip-picture" />
							</div>

						}
					</label>
					<InputFile class="form-control-file" id="picture" name="picture" OnChange="async (e) => await HandlePictureChange(e)" style="display: none;" />
				</div>
				<div class="form-group">
					<p></p>
					<label>Tyyppi</label>
					<InputText maxlength="34" class="form-control" @bind-Value="rentalInstrument.Type" disabled="@disabled"  />
				</div>

				<div class="form-group">
					<p></p>
					<label>Malli</label>
					<InputText maxlength="34" class="form-control" @bind-Value="rentalInstrument.Model" disabled="@disabled" />
				</div>

				<div class="form-group">
					<p></p>
					<label>Valmistusvuosi</label>
					<InputText maxlength="34" class="form-control" @bind-Value="rentalInstrument.ModelYear" disabled="@disabled" />
					
				</div>

				<div class="form-group">
					<p></p>
					<label>Hinta</label>
					<InputNumber maxlength="34" class="form-control" @bind-Value="rentalInstrument.Price" disabled="@disabled" />
				
				</div>

				<div class="form-group">
					<p></p>
					<label>Lisätiedot</label>
					<InputText maxlength="34" class="form-control" @bind-Value="rentalInstrument.InstrumentInfo" disabled="@disabled" />
					
				</div>

				

		    <div class="form-group">
			<label>Alkupäivämäärä</label>
			<br>
			<InputDate class="form-date" @bind-Value="dateStart" />
			
			</div>
			<div class="form-group">
			<label>Loppupäivämäärä</label>
			<br>
			<InputDate class="form-date" @bind-Value="dateEnd" />
			</div>

				<p></p>
				
				<p>
					<button class="btn btn-primary" type="submit" disabled="@isSubmitting">Lähetä vuokrauspyyntö</button>
					
				</p>


			</EditForm>
			<p>
				<NavLink class="btn btn-primary mt-5" href="@($"/allrentalinstruments")">Takaisin lainattaviin soittimiin</NavLink>
			</p>
		</div>
	</div>


}


@code {
	[Parameter]
	public int instrumentid { get; set; }

	private RentalInstrument? rentalInstrument = new RentalInstrument();
	bool isSubmitting;
	public DateTime dateStart = DateTime.Now;
	public DateTime dateEnd = DateTime.Now.AddDays(7);
	Rental newRental = new();
	bool disabled = true;


	protected override async Task OnInitializedAsync()
	{
		var tempInstruments = await Http.GetFromJsonAsync<RentalInstrument[]>("rentalInstrument");
		rentalInstrument = tempInstruments.FirstOrDefault(s => s.IdRentalInstrument == instrumentid);
	}

	private async Task SubmitRental()
	{
		Logger.LogInformation("Submitrental() called");
		Console.WriteLine($"Tähän päästiin2 ja ID = \t {instrumentid}");

		isSubmitting = true;

		newRental.IdRentalinstrument = instrumentid;
		newRental.IdRenter = rentalInstrument.IdRenter;
		newRental.Rentalstart = dateStart;
		newRental.Rentalend = dateEnd;
		newRental.IdCustomer = LoginInfo.Id;



		// Process the valid form
		var result = await Http.PostAsJsonAsync($"rental", newRental);

		rentalInstrument.Lainauspyynto = true;  // lainauspyyntö tallennetaan soittimeen


		var result2 = await Http.PutAsJsonAsync($"RentalInstrument/{instrumentid}", rentalInstrument);
		if (result.IsSuccessStatusCode && result2.IsSuccessStatusCode)
		{
			StateHasChanged();
			await InvokeAsync(StateHasChanged);
			NavigationManager.NavigateTo($"/allrentalinstruments");
		}
		else
		{
			Logger.LogError($"Failed to POST new rental. Details: {result.ReasonPhrase}");
		}
				
	}

	private async Task HandlePictureChange(InputFileChangeEventArgs e)
	{
		var buffer = new byte[e.File.Size];
		await e.File.OpenReadStream().ReadAsync(buffer);
		rentalInstrument.Picture = buffer;
	}
}